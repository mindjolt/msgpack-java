/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'paul' at '5/3/17 3:04 PM' with Gradle 2.9
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
buildscript {
    repositories {
        mavenLocal()
        maven {
            url 'https://artifactory.sgn.com/artifactory/repo'
            credentials {
                username mavenUser
                password mavenPassword
            }
        }
    }
    dependencies {
        classpath 'com.tkruse.gradle:gradle-groovysh-plugin:1.0.8'
        classpath 'org.gradlefx:gradlefx:1.3.2-SNAPSHOT'
    }
}

def getWorkingBranch() {
    // Triple double-quotes for the breaklines
    def workingBranch = """git rev-parse --abbrev-ref HEAD""".execute().text.trim()
    return workingBranch
}

def getGitVersion() {
    def gitDir = file('.git')
    def desc = "git --git-dir=$gitDir describe --tags --dirty --long".execute().text.trim()
    def match = desc =~ /^(.*)-(.*)-g([^-]+)(-dirty)?$/
    if (match.size() == 0)
        return 'none'
    def (_, tag, index, commit, isDirty) = match[0]
    if (index != '0' || isDirty)
        tag += '-SNAPSHOT'
    return tag
}

ext.gitVersion = getGitVersion()

task wrapper(type: Wrapper) {
    description 'Generates gradlew and gradlew.bat bootstrap scripts'
    gradleVersion = '2.10'
}

apply plugin: 'com.github.tkruse.groovysh'
apply plugin: 'maven'
apply plugin: 'application'
apply plugin: 'eclipse'

group 'com.jamcity'

repositories {
    mavenLocal()
    maven {
        url 'https://artifactory.sgn.com/artifactory/repo'
        credentials {
            username mavenUser
            password mavenPassword
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: 'https://artifactory.sgn.com/artifactory/libs-release-local') {
                authentication(userName: mavenUser, password: mavenPassword)
            }
            snapshotRepository(url: 'https://artifactory.sgn.com/artifactory/libs-snapshot-local') {
                authentication(userName: mavenUser, password: mavenPassword)
            }
        }
    }
}

version = gitVersion

mainClassName = 'com.jamcity.msgpack.Main'

// In this section you declare the dependencies for your production and test code
dependencies {
    compile 'com.googlecode.json-simple:json-simple:1.1.1', { exclude group: 'junit', module: 'junit' }
    compile 'org.javassist:javassist:3.18.1-GA'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12',
                'org.hamcrest:hamcrest-all:1.3',
                'org.mockito:mockito-all:1.10.8',
                'commons-io:commons-io:2.5'
}

sourceSets {
    sample
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

task version {
    description 'Display current version'
    doLast {
        println "Version: $gitVersion"
    }
}
